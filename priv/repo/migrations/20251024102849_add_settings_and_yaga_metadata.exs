defmodule Kirbs.Repo.Migrations.AddSettingsAndYagaMetadata do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:yaga_metadata, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :metadata_type, :text, null: false
      add :yaga_id, :bigint, null: false
      add :name, :text, null: false
      add :name_en, :text
      add :parent_id, :bigint
      add :metadata_json, :map

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:yaga_metadata, [:metadata_type, :yaga_id],
             name: "yaga_metadata_unique_metadata_index"
           )

    create table(:settings, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :key, :text, null: false
      add :value, :text

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:settings, [:key], name: "settings_unique_key_index")
  end

  def down do
    drop_if_exists unique_index(:settings, [:key], name: "settings_unique_key_index")

    drop table(:settings)

    drop_if_exists unique_index(:yaga_metadata, [:metadata_type, :yaga_id],
                     name: "yaga_metadata_unique_metadata_index"
                   )

    drop table(:yaga_metadata)
  end
end
